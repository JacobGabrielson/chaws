#!/bin/bash
# -*-* mode: sh-bash -*-

set -o pipefail
set -o errtrace
trap 'err_handler $?' ERR

err_handler() {
    trap - ERR
    let i=0 exit_status=$1
    echo "Aborting on error $exit_status:"
    echo "--------------------"
    while caller $i; do ((i++)); done
    exit $?
}
    
#set -x

# Produce short hash just as insurance in case the directory scheme
# produces a collision. For example "s3 ls a@" and "s3 ls a_" both
# wind up in .chaws-cache/s3/ls/a/ so there needs to be a final
# disambiguation.
function hexsum {
    printf "%x" "$(echo -n "$@" | cksum | cut -d' ' -f 1)"
}

# https://stackoverflow.com/a/17841619/68127
function join_by { local IFS="$1"; shift; echo "$*"; }

function args_to_dir {
    local -a dir_safe_args
    for arg in "$@"
    do
	safe_arg=$(echo -n "$arg" | tr --delete --complement 'a-zA-Z0-9_')
	dir_safe_args+=( $safe_arg  )
    done

    join_by "/" "${dir_safe_args[@]}"
}

CHAWS_CACHE_DIR=${CHAWS_CACHE_DIR-.chaws-cache}

metadata_dir="${CHAWS_CACHE_DIR}/.metadata"
mkdir -p "$metadata_dir"

cached_results_dir=${CHAWS_CACHE_DIR}/$(args_to_dir "$@")/$(hexsum "$@")

mkdir -p "$cached_results_dir"

cached_stdout=$cached_results_dir/stdout.out
cached_stderr=$cached_results_dir/stderrr.out
cached_return_code=$cached_results_dir/return-code
cached_args=$cached_results_dir/args

if [[ ! -f $cached_return_code || -n ${CHAWS_REFRESH+x} ]]
then
    cli_stdout=$(mktemp --tmpdir="$cached_results_dir" 'cli_stdoutXXXXX.out')
    # shellcheck disable=SC2064
    trap "rm -f '$cli_stdout'" EXIT
    rm -f "$cached_stderr"

    set +e
    echo aws "$@" >"$cached_args"
    aws "$@" >"$cli_stdout" 2>"$cached_stderr"
    return_code=$?
    echo $return_code >"$cached_return_code"
    set -e
    if [[ $return_code != 0 ]]
    then
	cat 1>&2 "$cached_stderr"
	exit $return_code
    else
	mv "$cli_stdout" "$cached_stdout"
    fi
fi

cat "$cached_stdout"
exit
